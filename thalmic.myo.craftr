# Copyright (C) 2015  Niklas Rosenstein
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from os import environ
from craftr import path, platform, Framework

sdk_path = environ.get('MYO_SDK_PATH', None)
if not sdk_path or not path.isdir(sdk_path):
  raise EnvironmentError('MYO_SDK_PATH not set or invalid')

winarch = environ.get('MYO_SDK_WINARCH', '64')
if winarch not in ('32', '64'):
  raise EnvironmentError('MYO_SDK_ARCH unsupported value: {0}'.format(winarch))

libmyo = Framework('libmyo')
if platform.name == 'Darwin':
  libmyo['osx_frameworks'] = ['myo']
  libmyo['osx_fwpath'] = [path.join(sdk_path)]
elif platform.name == 'Windows':
  libmyo['include'] = [path.join(sdk_path, 'include')]
  libmyo['libpath'] = [path.join(sdk_path, 'lib')]
  libmyo['libs'] = ['myo' + winarch]
else:
  raise EnvironmentError('Platform not supported: {0!r}'.format(platform.name))
